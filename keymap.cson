# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'atom-text-editor':
  'cmd-l': 'unset!'
  'cmd-r': 'unset!'
  'shift-cmd-K': 'hey-pane:toggle-focus-of-active-pane'
  'cmd-u': 'pane:split-right-and-copy-active-item'
  'cmd-alt-u': 'pane:close'

'.platform-darwin':
  'cmd-t': 'fuzzy-finder:toggle-file-finder'
  'cmd-p': 'command-palette:toggle'
  'cmd-l': 'go-to-line:toggle'

'.platform-darwin atom-text-editor':
  'cmd-e': 'find-and-replace:find-next-selected'
  'cmd-T': 'symbols-view:toggle-file-symbols'
  'cmd-alt-[': 'atom-beautify:beautify-editor'
  'cmd-alt-]': 'aligner:align'
  'cmd-r': 'atom-ctags:toggle-project-symbols'
